<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net46;netstandard2.0</TargetFrameworks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Title>Sekvap-dotnet</Title>
    <Description>A simple Key/Value language "Sekvap" implemented for .NET.

This thing converts this kind of strings into a IList&lt;KeyValuePair&lt;string, string&gt;&gt;.

&gt; Main value;Key1=Value 1;Key2=Value 2;Key2=Value 2 again

Why Sekvap?

Sekvap is easy to read, easy to parse and easy to store.

Sekvap is lighter than JSON or XML. It does not provide any depth though.

License: LGPL.</Description>
    <Copyright>Copyright Â© SandRock 2015</Copyright>
    <PackageProjectUrl>https://github.com/sandrock/Sekvap-dotnet/</PackageProjectUrl>
    <PackageIcon>logo-200.png</PackageIcon>
    <PackageTags>serializer sekvap key-value</PackageTags>
    <PackageReleaseNotes>Optional whitespace trimming of keys and values</PackageReleaseNotes>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <FileVersion>2.2.0.0</FileVersion>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
    <PublicSign>false</PublicSign>
    <Version>2.2.0</Version>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DocumentationFile>bin\Debug\SrkSekvap.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DocumentationFile>bin\Release\SrkSekvap.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\res\logo-200.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
      <Link>logo-200.png</Link>
    </None>
  </ItemGroup>

</Project>
